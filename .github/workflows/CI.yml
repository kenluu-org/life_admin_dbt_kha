name: CI on PR

on:
  pull_request:
    branches:
      - main
    paths:
      - 'dbt_project.yml'
      - 'models/**'
      - 'macros/**'
      - 'seeds/**'
      - 'lightdash/**'

env:
  LIGHTDASH_API_KEY: ${{ secrets.LIGHTDASH_API_KEY }}
  LIGHTDASH_PROJECT: ${{ secrets.LIGHTDASH_PROJECT }}
  LIGHTDASH_URL: ${{ secrets.LIGHTDASH_URL }}
  DBT_PROFILES_DIR: .
  DBT_TARGET: "CI"
  GCS_KEY: ${{ secrets.GCS_KEY }}
  GCS_SECRET: ${{ secrets.GCS_SECRET }}
  DBT_BQ_LOCATION: ${{ secrets.DBT_BQ_LOCATION }}
  DBT_BQ_PROJECT: ${{ secrets.DBT_BQ_PROJECT }}

jobs:
  validate:
    if: ${{ !contains(github.event.head_commit.message, '[skip ci]') }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5


      - name: Install uv
        uses: astral-sh/setup-uv@v6

      - name: Install python deps
        run: uv sync
        
      - name: Decode SA Key
        # This is a more secure way to decode the secret, as it avoids exposing it in the logs.
        run: echo "${{ secrets.DBT_BQ_KEYFILE_JSON }}" | base64 --decode > sa.json

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1

      - name: Get lightdash version 
        uses: sergeysova/jq-action@v2
        id: version 
        env:
          LIGHTDASH_URL: ${{ secrets.LIGHTDASH_URL }}   
        with: 
          cmd: curl -s "${LIGHTDASH_URL}/api/v1/health" | jq -r '.results.version'

      - name: Install npm dependencies
        run: bun install -g "@lightdash/cli@${{ steps.version.outputs.value }}" || bun install -g @lightdash/cli@latest

      - name: Set var DBT_CI_SCHEMA
        run: echo "DBT_CI_SCHEMA=PR_${{ github.event.number }}" >> $GITHUB_ENV

      - name: dbt tests
        env:
          DBT_CI_SCHEMA: ${{ env.DBT_CI_SCHEMA }}
        run: source .venv/bin/activate && dbt deps && dbt build
      
      - name: Start Lightdash preview
        env:
          DBT_CI_SCHEMA: ${{ env.DBT_CI_SCHEMA }}
        run: source .venv/bin/activate && lightdash start-preview --name $DBT_CI_SCHEMA
      
      - name: Validate Lightdash Project
        env:
          DBT_CI_SCHEMA: ${{ env.DBT_CI_SCHEMA }}
        run: source .venv/bin/activate && lightdash validate --preview 

      - name: Stop Lightdash preview
        env:
          DBT_CI_SCHEMA: ${{ env.DBT_CI_SCHEMA }}
        run: source .venv/bin/activate && lightdash stop-preview --name $DBT_CI_SCHEMA